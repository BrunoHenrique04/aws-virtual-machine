name: Terraform Pipeline

on:
  push:
    branches:
      - main

env:
  TERRAFORM_VERSION: 1.13.1
  # Backend S3 configuration
  S3_BUCKET_NAME: bruno-tf-state-bucket-566789789
  S3_BUCKET_REGION: us-east-1
  TERRAFORM_STATE_KEY: aws-load-balancer/terraform.tfstate

jobs:
  tf-aws:
    name: AWS provider
    runs-on: ubuntu-latest

    steps:
      - name: Step 01 - Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}

      - name: Step 01.1 - Terraform version
        run: terraform --version

      - name: Step 02 - CheckOut GitHub Repo
        uses: actions/checkout@v4

      - name: Step 03 - Authenticate with AWS
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} 
          aws-region: ${{ env.S3_BUCKET_REGION }}

      - name: Step 03.1 - Ensure S3 backend bucket exists
        shell: bash
        run: |
          set -euo pipefail
          BUCKET="${S3_BUCKET_NAME}"
          REGION="${S3_BUCKET_REGION}"
          echo "Checking S3 bucket: $BUCKET in region: $REGION"
          if aws s3api head-bucket --bucket "$BUCKET" 2>/dev/null; then
            echo "Bucket '$BUCKET' already exists."
          else
            echo "Creating bucket '$BUCKET' in region '$REGION'..."
            if [ "$REGION" = "us-east-1" ]; then
              aws s3api create-bucket --bucket "$BUCKET" --region "$REGION"
            else
              aws s3api create-bucket --bucket "$BUCKET" --region "$REGION" \
                --create-bucket-configuration LocationConstraint="$REGION"
            fi
            # Best practices: enable versioning and default encryption
            aws s3api put-bucket-versioning --bucket "$BUCKET" --versioning-configuration Status=Enabled
            aws s3api put-bucket-encryption --bucket "$BUCKET" --server-side-encryption-configuration '{"Rules":[{"ApplyServerSideEncryptionByDefault":{"SSEAlgorithm":"AES256"}}]}'
            echo "Bucket '$BUCKET' created and configured."
          fi

      - name: Step 04 - Terraform Init (S3 backend)
        run: |
          terraform -chdir=./terraform init \
            -reconfigure \
            -backend-config="bucket=${{ env.S3_BUCKET_NAME }}" \
            -backend-config="key=${{ env.TERRAFORM_STATE_KEY }}" \
            -backend-config="region=${{ env.S3_BUCKET_REGION }}" \
            -backend-config="encrypt=true"

      - name: Step 05 - Terraform Validate
        run: terraform -chdir=./terraform validate

      - name: Step 06 - Terraform Plan
        run: terraform -chdir=./terraform plan -out tfplan

      - name: Step 07 - Terraform Apply
        run: terraform -chdir=./terraform apply tfplan

      - name: Step 08 - Terraform Show
        run: terraform -chdir=./terraform show
